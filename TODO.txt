- research how to do ui layer
- find out how to implement pause menu

DungeonCrawler:
  - implement controller inputs
  - implement enemy class
  - implement enemy Spawn System
    - note try to decouple Spawn System and enemys so that we have creative liberty, when creating the enemies
    - Give all rooms a balance (maybe difficutly * 100) and all the monsters a cost, then randomly select monsters, that are cheap enough and subtract their cost from the balance
    - figure out, when to stop picking (probably define balance that it needs to undershoot and modify it a bit with random value (maybe +-difficulty * 5))
  later:
  - make Dungeon Rooms
  - play with lights

LoadingScreen:
  -add loading bar {maybe}
  -add msg display


CityBuilder:
  - make grid for citybuilder
  - make ressourcecounter for city builder
  - make citybuilder screen
  - buildings should be able to occupy multibple tiles

zu klären:
    - was für eine Art von grid für citybuilder [Quadratisch]
    - monsterspawning via spawnpoints defined in Tilemap okay? [ist okay]

Jede Waffe hat Knockback (beim treffen von environment oder gegnern)


Done:
  - Spawnpoint for doors
  - make temporary Levels to test out the System (ingame)